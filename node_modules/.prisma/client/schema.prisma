datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id                      Int              @id @default(autoincrement())
  createdAt               DateTime         @default(now()) @map("created_at")
  goals                   String
  ownerId                 Int              @unique @map("owner_id")
  owner                   User             @relation(fields: [ownerId], references: [id])
  activeTrainingProgramId Int?             @map("active_training_program_id")
  activeTrainingProgram   TrainingProgram? @relation(fields: [activeTrainingProgramId], references: [id])

  @@map("profile")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  username  String   @unique
  email     String   @unique

  // Prisma Required
  provider_id     String  @unique
  hashed_password String?

  Profile         Profile?
  TrainingProgram TrainingProgram[]
  ExerciseEvent   ExerciseEvent[]

  @@map("user")
}

model TrainingProgramDay {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  assignedBy Int      @map("assigned_by")

  dayOfTheWeek Int
  description  String

  trainingProgramId Int             @map("training_program_id")
  trainingProgram   TrainingProgram @relation(fields: [trainingProgramId], references: [id], onDelete: Cascade)
  exercises         ExerciseEvent[]

  @@map("training_program_day")
}

model TrainingProgram {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  name      String

  ownerId Int                  @map("owner_id")
  owner   User                 @relation(fields: [ownerId], references: [id])
  days    TrainingProgramDay[]
  Profile Profile[]

  @@map("training_program")
}

model ExerciseEvent {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @map("created_at")
  date       DateTime?
  name       String
  weight     Int       @default(0)
  difficulty Int?
  notes      String    @default("")

  ownerId              Int                 @map("owner_id")
  owner                User                @relation(fields: [ownerId], references: [id])
  trainingProgramDay   TrainingProgramDay? @relation(fields: [trainingProgramDayId], references: [id], onDelete: Cascade)
  trainingProgramDayId Int?

  @@map("exercise_event")
}
